# üì¶ –§–∏–Ω–∞–ª—å–Ω—ã–π main.py –¥–ª—è P2P SCANNER –±–æ—Ç–∞
import telebot
from telebot import types
import json
from datetime import datetime, timedelta
from scanner import compare_all_exchanges
from fpdf import FPDF

API_TOKEN = '8065004819:AAFP4n-1CteYJkl8mG6DscN_kHqcySD8QGk'
ADMIN_ID = 7833365313
bot = telebot.TeleBot(API_TOKEN)

# –ó–∞–≥—Ä—É–∑–∫–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ VIP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
try:
    with open("vip_users.json", "r") as f:
        vip_users = json.load(f)
except:
    vip_users = {}

def save_vip():
    with open("vip_users.json", "w") as f:
        json.dump(vip_users, f)

def clean_expired_vips():
    today = datetime.now().strftime("%Y-%m-%d")
    expired = [uid for uid, date in vip_users.items() if date < today]
    for uid in expired:
        del vip_users[uid]
    if expired:
        save_vip()
clean_expired_vips()

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu = types.ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.add("üîÅ –°–≤—è–∑–∫–∏", "üëë VIP")
main_menu.add("üìà –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä", "üìò –ü–æ–º–æ—â—å")
main_menu.add("üíé –ü–æ–¥–ø–∏—Å–∫–∞", "üë§ –ú–æ–π ID")

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    name = message.from_user.first_name or "–¥—Ä—É–≥"
    bot.send_message(message.chat.id, f"üîÆ <b>P2P SCANNER BOT</b>\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <b>{name}</b>!",
                     parse_mode="HTML", reply_markup=main_menu)

# –ü—Å–µ–≤–¥–æ-—Å–≤—è–∑–∫–∏
@bot.message_handler(func=lambda msg: msg.text == "üîÅ –°–≤—è–∑–∫–∏")
@bot.message_handler(commands=['—Å–≤—è–∑–∫–∏'])
def svyazki(message):
    bot.send_message(message.chat.id, "üß† –≠—Ç–æ –¥–µ–º–æ. –ß—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∫–∏, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /vip")

# –ü–æ–¥–ø–∏—Å–∫–∞
@bot.message_handler(func=lambda msg: msg.text == "üíé –ü–æ–¥–ø–∏—Å–∫–∞")
@bot.message_handler(commands=['–ø–æ–¥–ø–∏—Å–∫–∞'])
def subs(message):
    text = (
        "üíé <b>VIP –ü–æ–¥–ø–∏—Å–∫–∞:</b>\n\n"
        "üîπ 1 –¥–µ–Ω—å ‚Äî 500 KGS\nüîπ 7 –¥–Ω–µ–π ‚Äî 2500 KGS\nüîπ 30 –¥–Ω–µ–π ‚Äî 7500 KGS\n\n"
        "üí≥ –û–ø–ª–∞—Ç–∞ –Ω–∞ VISA: <code>4021 8300 5087 1042</code>\n"
        "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤–≤–µ–¥–∏—Ç–µ /–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å\n\n"
        "ü§ñ –ë–æ—Ç: @P2p_sng_bot"
    )
    bot.send_message(message.chat.id, text, parse_mode="HTML")

# –ö–æ–º–∞–Ω–¥–∞ VIP
@bot.message_handler(func=lambda msg: msg.text == "üëë VIP")
@bot.message_handler(commands=['vip'])
def vip(message):
    uid = str(message.chat.id)
    today = datetime.now().strftime("%Y-%m-%d")
    if uid in vip_users and vip_users[uid] >= today:
        results = compare_all_exchanges()
        bot.send_message(message.chat.id, "\n".join(results))
    else:
        bot.send_message(message.chat.id, "üîí –ù–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /–ø–æ–¥–ø–∏—Å–∫–∞", parse_mode="HTML")

# –ú–æ–π ID
@bot.message_handler(func=lambda msg: msg.text == "üë§ –ú–æ–π ID")
@bot.message_handler(commands=['–º–æ–π_–ø—Ä–æ—Ñ–∏–ª—å'])
def profile(message):
    uid = str(message.chat.id)
    name = message.from_user.first_name
    until = vip_users.get(uid, "–Ω–µ—Ç")
    status = "‚úÖ –î–æ " + until if until >= datetime.now().strftime("%Y-%m-%d") else "‚ùå –ù–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏"
    text = f"üë§ <b>{name}</b>\nID: <code>{uid}</code>\n–°—Ç–∞—Ç—É—Å: {status}"
    bot.send_message(message.chat.id, text, parse_mode="HTML")

# –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å–ª–æ–∂–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞
@bot.message_handler(func=lambda msg: msg.text == "üìà –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä")
@bot.message_handler(commands=['–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä'])
def start_calc(message):
    msg = bot.send_message(message.chat.id, "üìä –í–≤–µ–¥–∏—Ç–µ –¥–Ω–µ–≤–Ω–æ–π % –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1.5):")
    bot.register_next_step_handler(msg, process_percent)

def process_percent(message):
    try:
        percent = float(message.text.strip())
        msg = bot.send_message(message.chat.id, "üìÜ –ù–∞ —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å?")
        bot.register_next_step_handler(msg, lambda m: process_days(m, percent))
    except:
        bot.send_message(message.chat.id, "‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä 1.5")

def process_days(message, percent):
    try:
        days = int(message.text.strip())
        start = 1000
        final = start * (1 + percent / 100) ** days
        bot.send_message(message.chat.id,
                         f"üìà –ù–∞—á–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: $1000\nüìâ –î–Ω–µ–≤–Ω–æ–π %: {percent}%\nüìÜ –î–Ω–µ–π: {days}\n\nüí∞ –ò—Ç–æ–≥: <b>${final:.2f}</b>",
                         parse_mode="HTML")
    except:
        bot.send_message(message.chat.id, "‚ùå –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –¥–Ω–µ–π")

# –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.polling(none_stop=True)
