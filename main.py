
# üì¶ –ù–æ–≤—ã–π —É–ª—É—á—à–µ–Ω–Ω—ã–π main.py —Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º, —ç–º–æ–¥–∑–∏ –∏ –∫–Ω–æ–ø–∫–∞–º–∏
import telebot
from telebot import types
import json
from datetime import datetime, timedelta

API_TOKEN = '8065004819:AAGCuaB5ImkIPHqQKp4alsX4ue9GFvpqt-4'
bot = telebot.TeleBot(API_TOKEN)

# –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
try:
    with open("vip_users.json", "r") as f:
        vip_users = json.load(f)
except:
    vip_users = {}

def save_vip():
    with open("vip_users.json", "w") as f:
        json.dump(vip_users, f)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
main_menu = types.ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.add("üìä –ö—É—Ä—Å—ã", "üîÅ –°–≤—è–∑–∫–∏")
main_menu.add("üíé –ü–æ–¥–ø–∏—Å–∫–∞", "üëë VIP")

# /start
@bot.message_handler(commands=['start'])
def start(message):
    name = message.from_user.first_name or "–¥—Ä—É–≥"
    bot.send_message(message.chat.id, f"üëã –ü—Ä–∏–≤–µ—Ç, {name}!")
    bot.send_message(message.chat.id,
"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ P2P SCANNER BOT üîç\n\n–í—ã–±–∏—Ä–∞–π –Ω—É–∂–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å–Ω–∏–∑—É:", reply_markup=main_menu)

# –ö–Ω–æ–ø–∫–∞ "üìä –ö—É—Ä—Å—ã"
@bot.message_handler(func=lambda msg: msg.text == "üìä –ö—É—Ä—Å—ã")
def kurs(message):
    bot.send_message(message.chat.id, "üí± –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã:\n\nUSDT/TON/TRX/BTC\n(–¥–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è...)")

# –ö–Ω–æ–ø–∫–∞ "üîÅ –°–≤—è–∑–∫–∏"
@bot.message_handler(func=lambda msg: msg.text == "üîÅ –°–≤—è–∑–∫–∏")
def svyazki(message):
    text = "üîó –¢–æ–ø 3 —Å–≤—è–∑–∫–∏ –Ω–∞ —Å–µ–π—á–∞—Å:\n\n"
    text += "1Ô∏è‚É£ TON\nüîª OKX ‚Üí 1.20$\nüî∫ Binance ‚Üí 1.28$\nüí∞ –ü—Ä–∏–±—ã–ª—å: +6.7%\n\n"
    text += "2Ô∏è‚É£ TRX\nüîª Bybit ‚Üí 0.267$\nüî∫ OKX ‚Üí 0.278$\nüí∞ –ü—Ä–∏–±—ã–ª—å: +4.1%\n\n"
    text += "3Ô∏è‚É£ SHIB\nüîª Bybit ‚Üí 0.0000091$\nüî∫ Binance ‚Üí 0.0000097$\nüí∞ –ü—Ä–∏–±—ã–ª—å: +6.6%"
    bot.send_message(message.chat.id, text)

# –ö–Ω–æ–ø–∫–∞ "üíé –ü–æ–¥–ø–∏—Å–∫–∞"
@bot.message_handler(func=lambda msg: msg.text == "üíé –ü–æ–¥–ø–∏—Å–∫–∞")
@bot.message_handler(commands=['–ø–æ–¥–ø–∏—Å–∫–∞'])
def subs(message):
    with open("subscription.txt", "r", encoding="utf-8") as f:
        sub_text = f.read()
    bot.send_message(message.chat.id, sub_text)

# –ö–Ω–æ–ø–∫–∞ "üëë VIP"
@bot.message_handler(func=lambda msg: msg.text == "üëë VIP")
@bot.message_handler(commands=['vip'])
def vip(message):
    uid = str(message.chat.id)
    today = datetime.now().strftime("%Y-%m-%d")
    if uid in vip_users and vip_users[uid] >= today:
        bot.send_message(message.chat.id,
            "üëë VIP-—Å–≤—è–∑–∫–∏:\n\nTON: OKX ‚Üí 1.20$ ‚Üí Binance ‚Üí 1.28$ (+6.7%)\nTRX: Bybit ‚Üí 0.267$ ‚Üí OKX ‚Üí 0.278$ (+4.1%)")
    else:
        bot.send_message(message.chat.id,
            "üîí –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏. –í–≤–µ–¥–∏—Ç–µ /–ø–æ–¥–ø–∏—Å–∫–∞, —á—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –¥–æ—Å—Ç—É–ø.")

# /–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å
@bot.message_handler(commands=['–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å'])
def activate(message):
    msg = bot.send_message(message.chat.id, "üîê –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ (VIP-1, VIP-7, VIP-30):")
    bot.register_next_step_handler(msg, process_activation)

def process_activation(message):
    code = message.text.strip().upper()
    days = {"VIP-1": 1, "VIP-7": 7, "VIP-30": 30}
    if code in days:
        until = (datetime.now() + timedelta(days=days[code])).strftime("%Y-%m-%d")
        vip_users[str(message.chat.id)] = until
        save_vip()
        bot.send_message(message.chat.id, f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –¥–æ {until}")
    else:
        bot.send_message(message.chat.id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

bot.polling()
